# -*- coding: utf-8 -*-
#
# Copyright (c) 2016 Stephan Linz
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.
#

import sys
import os

from pkg_resources import get_distribution # to get the raw metadata content
from email import message_from_string      # to parse it using email.Parser
from webob.multidict import MultiDict      # to convert it to a MultiDict

try:
    pkg_metadata = get_distribution('publishing-withsphinx').get_metadata('METADATA')
except:
    pkg_metadata = get_distribution('publishing-withsphinx').get_metadata('PKG-INFO')

pkg_messages = message_from_string(pkg_metadata)
prj_metadata = MultiDict(pkg_messages)

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
sys.path.insert(0, os.path.abspath('samples'))
sys.path.insert(0, os.path.abspath('samples/an_example_pypi_project'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
needs_sphinx = '1.2'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['publishing.withsphinx']

# This value can be a dictionary specifying version requirements for extensions
# in extensions, e.g. needs_extensions = {'sphinxcontrib.something': '1.5'}. The
# version strings should be in the form major.minor. Requirements do not have to
# be specified for all extensions, only for those you want to check.
needs_extensions = {
    'publishing.withsphinx':                    '0.0',
    'sphinx.ext.autodoc':                       '1.2',
    'sphinx.ext.autosummary':                   '1.2',
    'sphinx.ext.coverage':                      '1.2',
    'sphinx.ext.extlinks':                      '1.2',
    'sphinx.ext.doctest':                       '1.2',
    'sphinx.ext.ifconfig':                      '1.2',
    'sphinx.ext.mathjax':                       '1.2',
    'sphinx.ext.todo':                          '1.2',
#   'sphinxarg.ext':                            '0.1',
#   'sphinxcontrib.ansi':                       '0.6',
#   'sphinxcontrib.autoprogram':                '0.1',
#   'sphinxcontrib.bibtex':                     '0.3',
    'sphinxcontrib.blockdiag':                  '1.5',
#   'sphinxcontrib.email':                      '0.3',
#   'sphinxcontrib.embedly':                    '0.2',
#   'sphinxcontrib.inlinesyntaxhighlight':      '0.2',
#   'sphinxcontrib.programoutput':              '0.8',
#   'sphinxcontrib.spelling':                   '2.2',
#   'sphinxcontrib.tikz':                       '0.4',
}

# -- Specific configuration -----------------------------------------------

# Fontpath for blockdiag (truetype font), The default is None.
# blockdiag_fontpath = os.path.abspath('../../tools/sphinx/themes/sphinxdoc-ext/static/dejavusans_book_macroman/DejaVuSans-webfont.ttf')
blockdiag_fontpath = os.path.abspath('/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf')

# Fontmap for blockdiag (maps fontfamily name to truetype font).
# The default is None.
# blockdiag_fontmap = os.path.abspath('./diag.fontmap')

# If this is True, blockdiag generates images with anti-alias filter.
# The default is False.
blockdiag_antialias = True

# You can specify image format on converting docs to HTML; accepts 'PNG'
# or 'SVG'. The default is 'PNG'.
blockdiag_html_image_format = 'SVG'

# You can specify image format on converting docs to TeX; accepts 'PNG'
# or 'PDF'. The default is 'PNG'.
blockdiag_latex_image_format = 'PDF'

# Set the required Embedly account key.
embedly_key = '6fed632213d44dcb98cb860fabb33e7f'

# Optional timeout used when fetching the embed code from Embedly.
# Default is 60 seconds.
embedly_timeout = 120

# This (boolean) setting triggers, if language, which is set by highlight
# directive, shall be used in code role, if no language is set by a
# customization. The default is True.
# inline_highlight_respect_highlight = True

# This (boolean) setting triggers, if ``literals`` shall be highlighted.
# Default is True.
# inline_highlight_literals = True

# If this is True, ANSI colour sequences in program output are interpreted.
# The default is False.
programoutput_use_ansi = True

# If you do not like the builtin stylesheets, set this to None and create
# your own stylesheet.
html_ansi_stylesheet = None

# String specifying the language, as understood by PyEnchant and enchant.
# Defaults to en_US for US English.
# spelling_lang = 'en_US'

# String specifying a file containing a list of words known to be spelled
# correctly but that do not appear in the language dictionary selected
# by spelling_lang. The file should contain one word per line. Refer to
# the PyEnchant tutorial for details.
# spelling_word_list_filename = 'spelling_wordlist.txt'

# Boolean controlling whether suggestions for misspelled words are printed.
# Defaults to False.
spelling_show_suggestions = True

# Boolean controlling whether words that look like package names from PyPI
# are treated as spelled properly. When True, the current list of package
# names is downloaded at the start of the build and used to extend the list
# of known words in the dictionary. Defaults to False.
# spelling_ignore_pypi_package_names = False

# Boolean controlling whether words that follow the CamelCase conventions
# used for page names in wikis should be treated as spelled properly.
# Defaults to True.
# spelling_ignore_wiki_words = True

# Boolean controlling treatment of words that appear in all capital letters,
# or all capital letters followed by a lower case s. When True, acronyms are
# assumed to be spelled properly. Defaults to True.
# spelling_ignore_acronyms = True

# Boolean controlling whether names built in to Python should be treated as
# spelled properly. Defaults to True.
# spelling_ignore_python_builtins = True

# Boolean controlling whether words that are names of modules found on
# sys.path are treated as spelled properly. Defaults to True.
# spelling_ignore_importable_modules = True

# List of filter classes to be added to the tokenizer that produces words
# to be checked. The classes should be derived from enchant.tokenize.Filter.
# Refer to the PyEnchant tutorial for examples.
# spelling_filters = []

# Choose the image processing, either 'Netpbm', 'pdf2svg', 'GhostScript'
# or 'ImageMagick'. The default is 'Netpbm'.
tikz_proc_suite = 'pdf2svg'

# Enable/disable transparent graphics. The default is True.
tikz_transparent = True

# Add some <string> to the sub process LaTeX preamble for the html build
# target. The default is None.
# tikz_latex_preamble = ''

# Add some \usetikzlibrary{<string>} to the sub process LaTeX preamble
# for the html build target. The default is None.
tikz_tikzlibraries = 'arrows,matrix,calendar,folding'

# Boolean indicating whether to scan all found documents for autosummary
# directives, and to generate stub pages for each. Can also be a list of
# documents for which stub pages should be generated. The new files will
# be placed in the directories specified in the :toctree: options of the
# directives. The default is False.
autosummary_generate = True

# This config value must be a dictionary of external sites, mapping unique
# short alias names to a base URL and a prefix.
extlinks = {
    'dsarcidxf':    ('http://datasheet.datasheetarchive.com/originals/scans/%s.pdf', 'Datasheet Archive (IDXF): '),
    'dsarcmain':    ('http://datasheet.datasheetarchive.com/originals/distributors/%s.pdf', 'Datasheet Archive (MAIN): '),
    'hehaddrhl':    ('https://www-user.tu-chemnitz.de/~heha/basteln/Konsumg%%C3%%BCter/DDR-Halbleiter/%s', 'Henrik Haftmann, GDR-Semiconductor (DATA): '),
    'hehaddrhlpfx': ('https://www-user.tu-chemnitz.de/~heha/basteln/Konsumg%%C3%%BCter/DDR-Halbleiter/#%s', 'Henrik Haftmann, GDR-Semiconductor (LIST): '),
    'rtloc':        ('http://www.robotrontechnik.de/html/standorte/%s', 'Robotron Technique, Locations: '),
    'rtstd':        ('http://www.robotrontechnik.de/html/standards/%s', 'Robotron Technique, Standards: '),
    'rtsw':         ('http://www.robotrontechnik.de/html/software/%s', 'Robotron Technique, Software: '),
    'rtcpt':        ('http://www.robotrontechnik.de/html/computer/%s', 'Robotron Technique, Computer: '),
    'rtpnt':        ('http://www.robotrontechnik.de/html/drucker/%s', 'Robotron Technique, Printer: '),
    'rtnet':        ('http://www.robotrontechnik.de/html/netzwerke/netzwerk.htm#%s', 'Robotron Technique, Networks: '),
    'rtk1520':      ('http://www.robotrontechnik.de/html/komponenten/k1520pla.htm#%s', 'Robotron Technique, K1520: '),
    'rtcon':        ('http://www.robotrontechnik.de/html/komponenten/stecker.htm#%s', 'Robotron Technique, Connectors: '),
    'rtfdd':        ('http://www.robotrontechnik.de/html/komponenten/fs.htm#%s', 'Robotron Technique, Floppy Disk Drives: '),
    'rtemr':        ('http://www.robotrontechnik.de/html/komponenten/emr.htm#%s', 'Robotron Technique, The Single-Chip Microcontroller: '),
    'rtic':         ('http://www.robotrontechnik.de/html/komponenten/ic.htm#%s', 'Robotron Technique, Integrated Circuits: '),
    'rtkbd':        ('http://www.robotrontechnik.de/html/zubehoer/tastaturen.htm#%s', 'Robotron Technique, Keyboards: '),
    'tglcate':      ('http://www.wak-gmbh.de/index.php?id=542&tgl-nummer=%s', 'TGL Catalog (EWN): '),
    'tglbarc':      ('https://www.bbr-server.de/bauarchivddr/archiv/tglarchiv/%s', 'TGL Archive (BBSR): '),
    'udbevglddrhl': ('http://www.elektron-bbs.de/elektronik/tabellen/ddr/%s.htm', 'Udo Bertholdt, Vgl. GDR-Semiconductor: '),
    'vopofetch':    ('http://hc-ddr.hucki.net/wiki/lib/exe/fetch.php/%s', 'Volker Pohlers, GDR-HC Download: '),
    '__vopofetch':  ('http://www.homecomputer-ddr.de.vu/wiki/lib/exe/fetch.php/%s', 'Volker Pohlers, GDR-HC Download: '),
    'vopowiki':     ('http://hc-ddr.hucki.net/wiki/doku.php/%s', 'Volker Pohlers, GDR-HC Wiki: '),
    '__vopowiki':   ('http://www.homecomputer-ddr.de.vu/wiki/doku.php/%s', 'Volker Pohlers, GDR-HC Wiki: '),
    'pesarnet':     ('http://www.robotron-net.de/%s', 'Peter Salomon, Robotron Net.: '),
    'itwinfo':      ('http://www.itwissen.info/definition/lexikon/%s', 'German ITwissen.info: '),
    'wikide':       ('http://de.wikipedia.org/wiki/%s', 'German Wikipedia: '),
    'wikien':       ('http://en.wikipedia.org/wiki/%s', 'English Wikipedia: '),
}


# Set this option to True if you want all displayed math to be numbered.
# The default is False.
math_number_all = True

# The path to the JavaScript file to include in the HTML files in order
# to load MathJax. The default is the http:// URL that loads the JS files
# from the MathJax CDN.
# mathjax_path = 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML'

# If this is True, todo and todolist produce output, else they produce
# nothing. The default is False.
todo_include_todos = True

# Add any paths that contain templates here, relative to this directory.
#templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = prj_metadata.get('Name') + 'basic functional tests'
license = prj_metadata.get('License')
summary = prj_metadata.get('Summary')
author = prj_metadata.get('Author')
author_email = prj_metadata.get('Author-email')
url = prj_metadata.get('Home-page')
download_url = prj_metadata.get('Download-URL')
# copyright = '2016, ' + author + ' <' + author_email + '>'
copyright = '2016, ' + author

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
release = prj_metadata.get('Version')        # The full version, incl alpha/beta/rc.
version = '.'.join(release.split('.')[0:3])  # The short X.Y.Z version.

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all
# documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'default'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'basic-functional-tests'


# -- Options for LaTeX output ---------------------------------------------

latex_custom = r'''
\setcounter{tocdepth}{3}
\usepackage{fontspec}
\setmainfont{DejaVu Sans Condensed}
\setsansfont{DejaVu Sans Condensed}
\setmonofont{DejaVu Sans Mono}
\setromanfont{DejaVu Serif Condensed}
\hypersetup{unicode=true}
\usepackage{tikz}''' + '''
\usepackage{pgfplots}
\usetikzlibrary{''' + tikz_tikzlibraries + '''}
'''

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    'papersize': 'a4paper',

    # The font size ('10pt', '11pt' or '12pt').
    'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    'inputenc': '',
    'utf8extra': '',
    'preamble': latex_custom,
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
  ('index', 'basic-functional-tests.tex',
   project, author, 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'basic-functional-tests',
     project, [author], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  ('index', 'basic-functional-tests',
   project, author, 'basic-functional-tests',
   'One line description of project.', 'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False


# -- Options for Epub output ---------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = author
epub_copyright = copyright

# The language of the text. It defaults to the language option
# or en if the language is not set.
#epub_language = ''

# The scheme of the identifier. Typical schemes are ISBN or URL.
#epub_scheme = ''

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#epub_identifier = ''

# A unique identification for the text.
#epub_uid = ''

# A tuple containing the cover image and cover page html template filenames.
#epub_cover = ()

# HTML files that should be inserted before the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#epub_pre_files = []

# HTML files shat should be inserted after the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#epub_post_files = []

# A list of files that should not be packed into the epub file.
#epub_exclude_files = []

# The depth of the table of contents in toc.ncx.
#epub_tocdepth = 3

# Allow duplicate toc entries.
#epub_tocdup = True
