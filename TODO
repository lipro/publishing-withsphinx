.. -*- coding: utf-8 -*-
.. -*- restructuredtext -*-

.. rubric:: Known issues

:implementation:

  * #23: Add support for Sphinx 1.8
  * #22: Add support for Sphinx 1.7

:testing:

  * #1: Avoid the deployment of copied DejaVuSans font in
    :literal:`tests/docs/basic/samples/DejaVuSans.ttf`.

  * Because of unknown reason the current state of documentation can only
    build inside a Python 2.7 run-time environment. In any Python 3
    environment the used :literal:`sphinxcontrib.traceables` extension
    runs into a :literal:`TypeError: can't pickle generator objects` when
    parse the directive :literal:`traceable-list` in combination with the
    option :literal:`:attributes:`.

:deployment:

  * The release process is completely untested.

:documentation:

  * #24: Mal formatted LaTeX sequence in :code:`traceable-matrix`. Currently
    it's not possible to generate a proper tractability matrix for LaTeX/PDF
    documents. All roles :code:`.. traceable-matrix::` must be disabled for
    LaTeX build (negated as :code:`.. only:: html`). The error source seems
    to be in the related Sphinx extension :literal:`sphinxcontrib-traceables`.

  * #4: There is no list of supported Sphinx extensions. A automatically
    representation should be prefered. A appropriate functionality
    should being found.

  * #5: The chapter *Compatibility Matrix* is insufficient. The mapping from
    Sphinx extensions to Sphinx versions is missing. A automatically
    representation should be prefered.

  * The current state of documentation can only build inside a Python 2.7
    run-time environment, because the dependent sphinxcontrib.traceables
    extension has a bug in the directive :literal:`traceable-list` in
    combination

  * There are certainly many spelling mistakes.

.. rubric:: Planned features

:implementation:

  * Provide a differentiated requirement management for all supported Sphinx
    extensions dependent on used versions of Python and Sphinx.

  * Provide a transparent image conversion process from native SVG graphics
    to spezific image formats dependent on used Sphinx writer backend, for
    examples PDF for LaTeX and PNG for HTML.

  * Provide some new Pybtex style formatter to support more (mostly non
    standardized) BibTeX field types.

  * Provide and deploy aditional CSS files to fix selected but faulty HTML
    templates. Maybe we will or have to cooperate with other projects, for
    example :literal:`sphinxcontrib-ansi`.

  * Provide new Sphinx roles to link directly to GitHub and/or BitBucket
    issue tracker.

:documentation:

  * #7: The documentation has to split into different parts: *User's Manual*,
    *Programmer's Manual*, *Regulatory Affairs*, and a *Sphinx Cheat Sheet*.

.. rubric:: Wishlist

:implementation:

  * Provide an specific LaTeX style template or extended the existent to
    support the needs of technical documentations, for example: reference
    or document numbers, project numbers, customized footer / header.

  * Provide harmonized handling for list of tables / figures / equations in
    its own sections or chapters between HTML and LaTeX.

  * Provide a list of todo section similar to the current implementation of
    the bibliography section in LaTeX.

  * Provide a option to influence the footnote handling in LaTeX, for example
    change all footnotes to endnotes. Endnotes should have same manner as the
    bibliography, placed in a separate section or chapter.

  * Support the Sphinx extension :literal:`sphinxcontrib-traceables`.

  * Support the Sphinx extension :literal:`sphinxcontrib-traceability`.
